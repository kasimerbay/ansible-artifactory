---
#Â Artifactory Installation Dependencies
- name: Install tar & wget
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  loop:
    - tar
    - wget
    - bash-completion

- name: Download Artifactory Repository
  ansible.builtin.get_url:
    url: "https://releases.jfrog.io/artifactory/artifactory-pro-rpms/artifactory-pro-rpms.repo"
    dest: "/etc/yum.repos.d/jfrog-artifactory-pro-rpms.repo"
    mode: 0644
    owner: root
    group: root

- name: Install Artifactory
  ansible.builtin.yum:
    name: "jfrog-artifactory-pro-{{ artifactory_version }}"
    state: present
    enablerepo: jfrog-artifactory-pro-rpms
  environment:
    - JFROG_HOME: "{{ jfrog_home }}"

- name: Check if Artifactory is installed
  ansible.builtin.stat:
    path: "/var/opt/jfrog/artifactory/etc/system.yaml"
  register: artifactory_installed

- name: Configure Artifactory - PostgreSQL in system.yaml
  ansible.builtin.template:
    src: "system.yaml.j2"
    dest: "/var/opt/jfrog/artifactory/etc/system.yaml"
    owner: root
    group: root
    mode: 0644
    backup: yes
  when: artifactory_installed.stat.exists
  register: artifactory_configured

- name: Start Artifactory
  ansible.builtin.service:
    name: artifactory
    state: started
    enabled: yes
  when: artifactory_configured.changed

# First stop the service and change the filstore path

- name: Stop Artifactory
  ansible.builtin.service:
    name: artifactory
    state: stopped

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /appdata/filestore/binaries
    state: directory
    owner: artifactory
    group: artifactory
    mode: '0755'

- name: Confiure Artifactory FileStore
  ansible.builtin.template:
    src: binarystore.xml.j2
    dest: "/var/opt/jfrog/artifactory/etc/artifactory/binarystore.xml"
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Start Artifactory
  ansible.builtin.service:
    name: artifactory
    state: started
    enabled: yes